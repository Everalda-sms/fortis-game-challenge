<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.3.1 (Python 3.9.6 on darwin)" generated="2025-06-29T15:08:54.107081" rpa="false" schemaversion="5">
<suite id="s1" name="Tests" source="/Users/everaldasoares/Documents/fortis-game-challenge/tests">
<suite id="s1-s1" name="Validate Random Date Generator" source="/Users/everaldasoares/Documents/fortis-game-challenge/tests/validate_random_date_generator.robot">
<test id="s1-s1-t1" name="Validate Random Dates Generator" line="56">
<kw name="Open Browser" owner="SeleniumLibrary">
<msg time="2025-06-29T15:08:54.166300" level="INFO">Opening browser 'chrome' to base url 'https://www.random.org/calendar-dates/'.</msg>
<arg>${URL}</arg>
<arg>${BROWSER}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<status status="PASS" start="2025-06-29T15:08:54.166180" elapsed="1.570197"/>
</kw>
<kw name="Set Number Of Dates To Generate">
<kw name="Wait Until Element Is Visible" owner="SeleniumLibrary">
<arg>${SELECTOR_NUM_INPUT}</arg>
<arg>timeout=10s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" start="2025-06-29T15:08:55.737340" elapsed="0.010719"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2025-06-29T15:08:55.748383" level="INFO">Typing text '4' into text field 'xpath=//input[@name='num']'.</msg>
<arg>${SELECTOR_NUM_INPUT}</arg>
<arg>${num_dates}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2025-06-29T15:08:55.748192" elapsed="0.075728"/>
</kw>
<arg>4</arg>
<doc>Inputs the desired number of dates to be generated.</doc>
<status status="PASS" start="2025-06-29T15:08:55.736996" elapsed="0.087020"/>
</kw>
<kw name="Select Date Range For Generator">
<kw name="Select From List By Label" owner="SeleniumLibrary">
<msg time="2025-06-29T15:08:55.824560" level="INFO">Selecting options from selection list 'name=start_month' by label January.</msg>
<arg>${SELECTOR_START_MONTH_DROPDOWN}</arg>
<arg>${start_month}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="PASS" start="2025-06-29T15:08:55.824421" elapsed="0.035928"/>
</kw>
<kw name="Select From List By Value" owner="SeleniumLibrary">
<msg time="2025-06-29T15:08:55.860634" level="INFO">Selecting options from selection list 'name=start_day' by value 5.</msg>
<arg>${SELECTOR_START_DAY_DROPDOWN}</arg>
<arg>${start_day}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="PASS" start="2025-06-29T15:08:55.860470" elapsed="0.018520"/>
</kw>
<kw name="Select From List By Value" owner="SeleniumLibrary">
<msg time="2025-06-29T15:08:55.879243" level="INFO">Selecting options from selection list 'name=start_year' by value 2024.</msg>
<arg>${SELECTOR_START_YEAR_DROPDOWN}</arg>
<arg>${start_year}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="PASS" start="2025-06-29T15:08:55.879092" elapsed="0.019024"/>
</kw>
<kw name="Select From List By Label" owner="SeleniumLibrary">
<msg time="2025-06-29T15:08:55.898374" level="INFO">Selecting options from selection list 'name=end_month' by label November.</msg>
<arg>${SELECTOR_END_MONTH_DROPDOWN}</arg>
<arg>${end_month}</arg>
<doc>Selects options from selection list ``locator`` by ``labels``.</doc>
<status status="PASS" start="2025-06-29T15:08:55.898226" elapsed="0.024639"/>
</kw>
<kw name="Select From List By Value" owner="SeleniumLibrary">
<msg time="2025-06-29T15:08:55.923127" level="INFO">Selecting options from selection list 'name=end_day' by value 25.</msg>
<arg>${SELECTOR_END_DAY_DROPDOWN}</arg>
<arg>${end_day}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="PASS" start="2025-06-29T15:08:55.922978" elapsed="0.018447"/>
</kw>
<kw name="Select From List By Value" owner="SeleniumLibrary">
<msg time="2025-06-29T15:08:55.941682" level="INFO">Selecting options from selection list 'name=end_year' by value 2025.</msg>
<arg>${SELECTOR_END_YEAR_DROPDOWN}</arg>
<arg>${end_year}</arg>
<doc>Selects options from selection list ``locator`` by ``values``.</doc>
<status status="PASS" start="2025-06-29T15:08:55.941534" elapsed="0.012471"/>
</kw>
<arg>January</arg>
<arg>5</arg>
<arg>2024</arg>
<arg>November</arg>
<arg>25</arg>
<arg>2025</arg>
<doc>Selects the start and end dates for the random date generator.</doc>
<status status="PASS" start="2025-06-29T15:08:55.824191" elapsed="0.129887"/>
</kw>
<kw name="Click Button" owner="SeleniumLibrary">
<msg time="2025-06-29T15:08:55.954339" level="INFO">Clicking button 'xpath=//input[@value='Get Dates']'.</msg>
<arg>${SELECTOR_GET_DATES_BUTTON}</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<status status="PASS" start="2025-06-29T15:08:55.954196" elapsed="0.021317"/>
</kw>
<kw name="Wait Until Page Contains Element" owner="SeleniumLibrary">
<arg>${SELECTOR_DATES_PARAGRAPH}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" start="2025-06-29T15:08:55.975669" elapsed="0.275832"/>
</kw>
<kw name="Get Text" owner="SeleniumLibrary">
<msg time="2025-06-29T15:08:56.262395" level="INFO">${text_result} = Here are your 4 calendar dates:</msg>
<var>${text_result}</var>
<arg>${SELECTOR_HEADER_TEXT_RESULT}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="PASS" start="2025-06-29T15:08:56.251711" elapsed="0.010718"/>
</kw>
<kw name="Should Contain" owner="BuiltIn">
<arg>${text_result}</arg>
<arg>Here are your 4 calendar dates</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2025-06-29T15:08:56.262598" elapsed="0.000134"/>
</kw>
<kw name="Get Text" owner="SeleniumLibrary">
<msg time="2025-06-29T15:08:56.268620" level="INFO">${dates_paragraph_text} = 2024-02-07
2024-06-06
2024-08-05
2025-08-26</msg>
<var>${dates_paragraph_text}</var>
<arg>${SELECTOR_DATES_PARAGRAPH}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="PASS" start="2025-06-29T15:08:56.262840" elapsed="0.005805"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2025-06-29T15:08:56.268879" level="INFO">4 lines returned.</msg>
<msg time="2025-06-29T15:08:56.268928" level="INFO">${dates_list} = ['2024-02-07', '2024-06-06', '2024-08-05', '2025-08-26']</msg>
<var>${dates_list}</var>
<arg>${dates_paragraph_text}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2025-06-29T15:08:56.268767" elapsed="0.000177"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2025-06-29T15:08:56.269130" level="INFO">Length is 4.</msg>
<msg time="2025-06-29T15:08:56.269175" level="INFO">${length} = 4</msg>
<var>${length}</var>
<arg>${dates_list}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2025-06-29T15:08:56.269053" elapsed="0.000137"/>
</kw>
<kw name="Should Be Equal As Integers" owner="BuiltIn">
<msg time="2025-06-29T15:08:56.269361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${length}</arg>
<arg>4</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="PASS" start="2025-06-29T15:08:56.269276" elapsed="0.000120"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Date Should Be Between">
<kw name="Convert Date" owner="DateTime">
<msg time="2025-06-29T15:08:56.270794" level="INFO">${converted_date} = 1707264000.0</msg>
<var>${converted_date}</var>
<arg>${date_to_check}</arg>
<arg>date_format=%Y-%m-%d</arg>
<arg>result_format=epoch</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2025-06-29T15:08:56.269892" elapsed="0.000923"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2025-06-29T15:08:56.271033" level="INFO">${start_epoch} = 1704412800.0</msg>
<var>${start_epoch}</var>
<arg>${start_limit}</arg>
<arg>date_format=%Y-%m-%d</arg>
<arg>result_format=epoch</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2025-06-29T15:08:56.270887" elapsed="0.000164"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2025-06-29T15:08:56.271309" level="INFO">${end_epoch} = 1764028800.0</msg>
<var>${end_epoch}</var>
<arg>${end_limit}</arg>
<arg>date_format=%Y-%m-%d</arg>
<arg>result_format=epoch</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2025-06-29T15:08:56.271175" elapsed="0.000152"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${converted_date} &gt;= ${start_epoch}</arg>
<arg>msg=Date ${date_to_check} (${converted_date}) is before start limit ${start_limit} (${start_epoch}).</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-29T15:08:56.271391" elapsed="0.000323"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${converted_date} &lt;= ${end_epoch}</arg>
<arg>msg=Date ${date_to_check} (${converted_date}) is after end limit ${end_limit} (${end_epoch}).</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-29T15:08:56.271779" elapsed="0.000215"/>
</kw>
<arg>${date}</arg>
<arg>${DATE_RANGE_START_LIMIT}</arg>
<arg>${DATE_RANGE_END_LIMIT}</arg>
<doc>Verifies if a given date falls within a specified start and end date.</doc>
<status status="PASS" start="2025-06-29T15:08:56.269675" elapsed="0.002364"/>
</kw>
<var name="${date}">2024-02-07</var>
<status status="PASS" start="2025-06-29T15:08:56.269573" elapsed="0.002496"/>
</iter>
<iter>
<kw name="Date Should Be Between">
<kw name="Convert Date" owner="DateTime">
<msg time="2025-06-29T15:08:56.272537" level="INFO">${converted_date} = 1717628400.0</msg>
<var>${converted_date}</var>
<arg>${date_to_check}</arg>
<arg>date_format=%Y-%m-%d</arg>
<arg>result_format=epoch</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2025-06-29T15:08:56.272400" elapsed="0.000154"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2025-06-29T15:08:56.272741" level="INFO">${start_epoch} = 1704412800.0</msg>
<var>${start_epoch}</var>
<arg>${start_limit}</arg>
<arg>date_format=%Y-%m-%d</arg>
<arg>result_format=epoch</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2025-06-29T15:08:56.272618" elapsed="0.000140"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2025-06-29T15:08:56.272942" level="INFO">${end_epoch} = 1764028800.0</msg>
<var>${end_epoch}</var>
<arg>${end_limit}</arg>
<arg>date_format=%Y-%m-%d</arg>
<arg>result_format=epoch</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2025-06-29T15:08:56.272818" elapsed="0.000140"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${converted_date} &gt;= ${start_epoch}</arg>
<arg>msg=Date ${date_to_check} (${converted_date}) is before start limit ${start_limit} (${start_epoch}).</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-29T15:08:56.273017" elapsed="0.000198"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${converted_date} &lt;= ${end_epoch}</arg>
<arg>msg=Date ${date_to_check} (${converted_date}) is after end limit ${end_limit} (${end_epoch}).</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-29T15:08:56.273275" elapsed="0.000200"/>
</kw>
<arg>${date}</arg>
<arg>${DATE_RANGE_START_LIMIT}</arg>
<arg>${DATE_RANGE_END_LIMIT}</arg>
<doc>Verifies if a given date falls within a specified start and end date.</doc>
<status status="PASS" start="2025-06-29T15:08:56.272204" elapsed="0.001312"/>
</kw>
<var name="${date}">2024-06-06</var>
<status status="PASS" start="2025-06-29T15:08:56.272126" elapsed="0.001416"/>
</iter>
<iter>
<kw name="Date Should Be Between">
<kw name="Convert Date" owner="DateTime">
<msg time="2025-06-29T15:08:56.273986" level="INFO">${converted_date} = 1722812400.0</msg>
<var>${converted_date}</var>
<arg>${date_to_check}</arg>
<arg>date_format=%Y-%m-%d</arg>
<arg>result_format=epoch</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2025-06-29T15:08:56.273859" elapsed="0.000143"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2025-06-29T15:08:56.274189" level="INFO">${start_epoch} = 1704412800.0</msg>
<var>${start_epoch}</var>
<arg>${start_limit}</arg>
<arg>date_format=%Y-%m-%d</arg>
<arg>result_format=epoch</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2025-06-29T15:08:56.274066" elapsed="0.000139"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2025-06-29T15:08:56.274389" level="INFO">${end_epoch} = 1764028800.0</msg>
<var>${end_epoch}</var>
<arg>${end_limit}</arg>
<arg>date_format=%Y-%m-%d</arg>
<arg>result_format=epoch</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2025-06-29T15:08:56.274266" elapsed="0.000139"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${converted_date} &gt;= ${start_epoch}</arg>
<arg>msg=Date ${date_to_check} (${converted_date}) is before start limit ${start_limit} (${start_epoch}).</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-29T15:08:56.274464" elapsed="0.000208"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${converted_date} &lt;= ${end_epoch}</arg>
<arg>msg=Date ${date_to_check} (${converted_date}) is after end limit ${end_limit} (${end_epoch}).</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-29T15:08:56.274734" elapsed="0.000196"/>
</kw>
<arg>${date}</arg>
<arg>${DATE_RANGE_START_LIMIT}</arg>
<arg>${DATE_RANGE_END_LIMIT}</arg>
<doc>Verifies if a given date falls within a specified start and end date.</doc>
<status status="PASS" start="2025-06-29T15:08:56.273665" elapsed="0.001304"/>
</kw>
<var name="${date}">2024-08-05</var>
<status status="PASS" start="2025-06-29T15:08:56.273596" elapsed="0.001399"/>
</iter>
<iter>
<kw name="Date Should Be Between">
<kw name="Convert Date" owner="DateTime">
<msg time="2025-06-29T15:08:56.275415" level="INFO">${converted_date} = 1756162800.0</msg>
<var>${converted_date}</var>
<arg>${date_to_check}</arg>
<arg>date_format=%Y-%m-%d</arg>
<arg>result_format=epoch</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2025-06-29T15:08:56.275289" elapsed="0.000143"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2025-06-29T15:08:56.275615" level="INFO">${start_epoch} = 1704412800.0</msg>
<var>${start_epoch}</var>
<arg>${start_limit}</arg>
<arg>date_format=%Y-%m-%d</arg>
<arg>result_format=epoch</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2025-06-29T15:08:56.275491" elapsed="0.000140"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2025-06-29T15:08:56.275820" level="INFO">${end_epoch} = 1764028800.0</msg>
<var>${end_epoch}</var>
<arg>${end_limit}</arg>
<arg>date_format=%Y-%m-%d</arg>
<arg>result_format=epoch</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2025-06-29T15:08:56.275694" elapsed="0.000148"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${converted_date} &gt;= ${start_epoch}</arg>
<arg>msg=Date ${date_to_check} (${converted_date}) is before start limit ${start_limit} (${start_epoch}).</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-29T15:08:56.275907" elapsed="0.000214"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>${converted_date} &lt;= ${end_epoch}</arg>
<arg>msg=Date ${date_to_check} (${converted_date}) is after end limit ${end_limit} (${end_epoch}).</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-06-29T15:08:56.276186" elapsed="0.000201"/>
</kw>
<arg>${date}</arg>
<arg>${DATE_RANGE_START_LIMIT}</arg>
<arg>${DATE_RANGE_END_LIMIT}</arg>
<doc>Verifies if a given date falls within a specified start and end date.</doc>
<status status="PASS" start="2025-06-29T15:08:56.275110" elapsed="0.001317"/>
</kw>
<var name="${date}">2025-08-26</var>
<status status="PASS" start="2025-06-29T15:08:56.275042" elapsed="0.001410"/>
</iter>
<var>${date}</var>
<value>@{dates_list}</value>
<status status="PASS" start="2025-06-29T15:08:56.269465" elapsed="0.007027"/>
</for>
<doc>This test verifies that the specified number of random dates are generated and fall within the chosen interval.</doc>
<tag>random-date</tag>
<status status="PASS" start="2025-06-29T15:08:54.165636" elapsed="2.110958"/>
</test>
<kw name="Close Browser" owner="SeleniumLibrary" type="TEARDOWN">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2025-06-29T15:08:56.276895" elapsed="0.070709"/>
</kw>
<status status="PASS" start="2025-06-29T15:08:54.114806" elapsed="2.232869"/>
</suite>
<status status="PASS" start="2025-06-29T15:08:54.107825" elapsed="2.240280"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">random-date</stat>
</tag>
<suite>
<stat name="Tests" id="s1" pass="1" fail="0" skip="0">Tests</stat>
<stat name="Validate Random Date Generator" id="s1-s1" pass="1" fail="0" skip="0">Tests.Validate Random Date Generator</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
